# Project Euler: Problem 2 Source Code. By MariinoS. 5th Feb 2016.

# task:   Each new term in the Fibonacci sequence is generated by adding the
#         previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#                         1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#         By considering the terms in the Fibonacci sequence whose values do not
#         exceed four million, find the sum of the even-valued terms.
#
# My Solution:

fibonacci = [1,2]

def finish_fibonacci(x):
    last_number = fibonacci[len(fibonacci) - 1]
    scnd_last_number = fibonacci[len(fibonacci) - 2]
    next_number = last_number + scnd_last_number

    while next_number < x:
        fibonacci.append(next_number)
        next_number = next_number + fibonacci[len(fibonacci) - 2]

def sum_even(input):
    total = 0
    for i in input:
        if i % 2 == 0:
            total = total + i
    return total

finish_fibonacci(4000000)
total = sum_even(fibonacci)

print fibonacci
print
print "The sum is of the even numbers is:", total
