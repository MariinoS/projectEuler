//  Project Euler: Problem 2 Source Code. By MariinoS. 9th Feb 2016. - Java
//
//  task:   Each new term in the Fibonacci sequence is generated by adding the
//          previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//                          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//          By considering the terms in the Fibonacci sequence whose values do not
//          exceed four million, find the sum of the even-valued terms.
//
//  My Solution:

import java.util.ArrayList;

public class problem2
{
    // Method to fill the Fibonacci list untill the value of a is reached.
    public static void finishFibonacci(int a, ArrayList<Integer> list)
    {
        list.add(1);
        list.add(2);
        int lastNumber = list.get(list.size() - 1);
        int scndLastNumber = list.get(list.size() - 2);
        int nextNumber = lastNumber + scndLastNumber;

        while (nextNumber < a)
        {
            list.add(nextNumber);
            nextNumber = (list.get(list.size() - 1)) + (list.get(list.size() - 2));
        }
    }

    // Method to calculate the sum of the even numbers in the input.
    public static int sumEven(ArrayList<Integer> list)
    {
        int total = 0;
        for(int i: list )
        {
            if (i % 2 == 0)
                total += i;
        }
        return total;
    }

    public static void main(String[] args)
    {
        // Create Fibonacci list
        ArrayList<Integer> Fibonacci = new ArrayList<Integer>();

        // Complete Fibonacci list for a = 4000000
        finishFibonacci(4000000, Fibonacci);

        // Calculate the sum of the even numbers.
        int sum = sumEven(Fibonacci);
        System.out.println("The sum of the even numbers is: ");
        System.out.println(sum);

    }
}
